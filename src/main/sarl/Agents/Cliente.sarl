/** 
 * 
 */
package Agents

import io.sarl.core.AgentKilled
import io.sarl.core.AgentSpawned
import io.sarl.core.ContextJoined
import io.sarl.core.ContextLeft
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.MemberJoined
import io.sarl.core.MemberLeft
import io.sarl.core.DefaultContextInteractions
import Events.solicitudPed
import Events.giveTrackingCode
import Events.sendProposal
import Events.selectProduct
import io.sarl.core.Schedules
import java.util.Random


/** 
 * @author Daniel
 * 
 */
agent Cliente {
	uses Logging
	uses DefaultContextInteractions
	uses Schedules

	on Initialize {
		println("--------------")
		println("Soy el un cliente")
		in(2000)[solicitarProduct("Fernet")]
		println("--------------")
	}

	def solicitarProduct(c: String){
		if(defaultSpace.participants.size>1){
			emit(new solicitudPed(c))
		}else{
			in(3000)[solicitarProduct(c)]
		}
	}
	
	on sendProposal {
		println("Productos:")	
		var c=0
		for (p : occurrence.productos) {
			c++
			println(c+" Nombre: " + p.getCodigo())
			println("Precio total: " + p.getTotal())
			
		}
		
		var r = new Random();
		var i = r.nextInt(occurrence.productos.size())
		println((i+1)+" Eleccion: "+occurrence.productos.get(i).getCodigo())
		
		emit(new selectProduct(occurrence.productos.get(i)))
			
	}
	
	on giveTrackingCode{
		println("Mi Tracking code es:"+ occurrence.trackingCode)
	}
	
		
}
